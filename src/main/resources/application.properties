spring.profiles.active=pre
###############################
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
##Druid##
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#连接池启动时创建的连接数量的初始值
spring.datasource.initialSize=5
#最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请
spring.datasource.minIdle=5
#连接池的最大值，同一时间可以从池分配的最多连接数量，0时无限制
spring.datasource.maxActive=100
#最大建立连接等待时间。单位为 ms，如果超过此时间将接到异常。设为-1表示无限制
spring.datasource.maxWait=60000
#1) Destroy线程会检测连接的间隔时间2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
#spring.datasource.validationQuery=SELECT 1 FROM DUAL
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
spring.datasource.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.testOnReturn=false
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。
spring.datasource.poolPreparedStatements=true
#指定每个连接上PSCache的大小
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.useGlobalDataSourceStat=true
#logging
logging.config=classpath:logback-spring.xml
#mybatis-plus
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.typeAliases=com.lynn.web.entities.*